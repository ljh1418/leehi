<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
						
	<!--  트랜젝션은 스프링에서 여러가지 방법으로 처리 할 수 있지만 가장 편한 AOP방식으로 설정하겠다. -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<tx:advice id="txAdvice"		transaction-manager="txManager">
		<tx:attributes>
			<!-- 이 부분은 모든 메소드에서 Exception이 발생하였을 경우 무조건 롤백 하도록 설정 -->
			<tx:method name="*"	rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<!-- aop를 사용하여 com.js.app.기능명. service내 Impl.java 로 끝나는 자바 파일에 aop 시점을 두어 transaction 처리-->
        <aop:pointcut id="requiredTx" expression="execution(* lee.jun.ho..service..*ServiceImpl.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="requiredTx"/>
	</aop:config>
</beans>